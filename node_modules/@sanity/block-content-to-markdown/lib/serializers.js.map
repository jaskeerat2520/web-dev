{"version":3,"sources":["../src/serializers.js"],"names":["require","getImageUrl","renderChildren","props","divider","Array","isArray","children","join","block","style","node","test","hashes","parseInt","RawMarkSerializer","char","padWhitespace","startContent","search","endContent","start","substring","end","content","link","mark","href","title","linkTitle","JSON","stringify","list","indentation","level","listItem","isBullet","index","image","alt","url","imgTitle","container","hardBreak","module","exports","types","marks","bind","em","code","strong","underline","markFallback"],"mappings":"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","file":"serializers.js","sourcesContent":["const {getImageUrl} = require('@sanity/block-content-to-hyperscript/internals')\n\nfunction renderChildren(props, divider = '') {\n  return Array.isArray(props.children) ? props.children.join(divider) : props.children\n}\n\nfunction block(props) {\n  const style = props.node.style || 'normal'\n\n  if (/^h\\d$/.test(style)) {\n    const hashes = new Array(parseInt(style[1], 10) + 1).join('#')\n    return `${hashes} ${renderChildren(props)}`\n  }\n\n  if (style === 'blockquote') {\n    return `> ${renderChildren(props)}`\n  }\n\n  return renderChildren(props)\n}\n\nfunction RawMarkSerializer(char, padWhitespace, props) {\n  const children = renderChildren(props)\n\n  if (padWhitespace) {\n    const startContent = children.search(/\\S/)\n    const endContent = children.search(/\\S(?=\\s*$)/)\n\n    if (endContent == -1 || startContent == -1) {\n      return children\n    }\n\n    const start = children.substring(0, startContent)\n    const end = children.substring(endContent + 1)\n\n    const content = children.substring(startContent, endContent + 1)\n\n    return `${start}${char}${content}${char}${end}`\n  }\n\n  return `${char}${children}${char}`\n}\n\nfunction link(props) {\n  const {href, title} = props.mark\n  const linkTitle = title ? ` ${JSON.stringify(title)}` : ''\n  return `[${renderChildren(props)}](${href}${linkTitle})`\n}\n\nfunction list(props) {\n  const indentation = new Array(props.level || 1).join('  ')\n  return indentation + renderChildren(props, `\\n${indentation}`)\n}\n\nfunction listItem(props) {\n  const isBullet = props.node.listItem === 'bullet'\n  const char = isBullet ? '*' : `${props.index + 1}.`\n  return `${char} ${renderChildren(props)}`\n}\n\nfunction image(props) {\n  const {title, alt} = props\n  const url = getImageUrl(props)\n  const imgTitle = title ? ` ${JSON.stringify(title)}` : ''\n  return `![${alt || ''}](${url}${imgTitle})`\n}\n\nfunction container(props) {\n  return renderChildren(props, '\\n\\n')\n}\n\nfunction hardBreak() {\n  return '  \\n'\n}\n\nmodule.exports = {\n  types: {\n    block,\n    image\n  },\n\n  marks: {\n    'strike-through': RawMarkSerializer.bind(null, '~~', true),\n    em: RawMarkSerializer.bind(null, '_', true),\n    code: RawMarkSerializer.bind(null, '`', false),\n    strong: RawMarkSerializer.bind(null, '**', true),\n    underline: renderChildren,\n    link\n  },\n\n  list,\n  listItem,\n  container,\n  hardBreak,\n  markFallback: renderChildren\n}\n"]}